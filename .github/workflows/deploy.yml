name: Deploy

on:
  release:
    types: [published]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy app code to Droplet (excluding .env)
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: root
          key: ${{ secrets.DROPLET_SSH_KEY }}
          source: "."
          target: "/root/app"

      - name: SSH and deploy containers (Dockerfile handles New Relic)
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: root
          key: ${{ secrets.DROPLET_SSH_KEY }}
          script: |
            set -e
            cd /root/app

            if [ ! -f /root/.env ]; then
              echo "❌ /root/.env not found. Aborting..."
              exit 1
            fi

            if [ ! -f newrelic.ini ]; then
              echo "❌ newrelic.ini not found. Aborting..."
              exit 1
            fi

            docker build -t django-app:${{ github.ref_name }} -f .docker/Dockerfile .

            docker stop django-app || true && docker rm django-app || true
            docker stop celery-worker || true && docker rm celery-worker || true

            # Django
            docker run -d --name django-app \
              --env-file /root/.env \
              -v /root/app/newrelic.ini:/app/newrelic.ini \
              -p 8000:8000 \
              django-app:${{ github.ref_name }}

            # Celery
            docker run -d --name celery-worker \
              --env-file /root/.env \
              -e MODE=worker \
              -v /root/app/newrelic.ini:/app/newrelic.ini \
              django-app:${{ github.ref_name }}

            docker image prune -f
